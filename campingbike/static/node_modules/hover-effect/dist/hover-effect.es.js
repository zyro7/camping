import{Scene as f,OrthographicCamera as w,WebGLRenderer as E,TextureLoader as U,RepeatWrapping as D,VideoTexture as _,LinearFilter as z,ShaderMaterial as q,PlaneBufferGeometry as A,Mesh as P}from"three";import k from"gsap/TweenMax";export default function(J){function K(){for(var f=arguments,w=0;w<arguments.length;w++)if(void 0!==f[w])return f[w]}console.log("%c Hover effect by Robin Delaporte: https://github.com/robin-dela/hover-effect ","color: #bada55; font-size: 0.8rem");var N=J.parent,Q=J.displacementImage,X=J.image1,Y=J.image2,Z=K(J.intensity1,J.intensity,1),$=K(J.intensity2,J.intensity,1),C=K(J.angle,Math.PI/4),H=K(J.angle1,C),h=K(J.angle2,3*-C),B=K(J.speedIn,J.speed,1.6),M=K(J.speedOut,J.speed,1.2),R=K(J.hover,!0),S=K(J.easing,Expo.easeOut),W=K(J.video,!1);if(N)if(X&&Y&&Q){var y=new f,j=new w(N.offsetWidth/-2,N.offsetWidth/2,N.offsetHeight/2,N.offsetHeight/-2,1,1e3);j.position.z=1;var G=new E({antialias:!1,alpha:!0});G.setPixelRatio(window.devicePixelRatio),G.setClearColor(16777215,0),G.setSize(N.offsetWidth,N.offsetHeight),N.appendChild(G.domElement);var b=function(){G.render(y,j)},O=new U;O.crossOrigin="";var I=O.load(Q,b);if(I.wrapS=I.wrapT=D,W){var s=function(){requestAnimationFrame(s),G.render(y,j)};s(),(W=document.createElement("video")).autoplay=!0,W.loop=!0,W.src=X,W.load();var c=document.createElement("video");c.autoplay=!0,c.loop=!0,c.src=Y,c.load();var g=new _(W),V=new _(c);g.magFilter=V.magFilter=z,g.minFilter=V.minFilter=z,c.addEventListener("loadeddata",function(){c.play(),(V=new _(c)).magFilter=z,V.minFilter=z,T.uniforms.texture2.value=V},!1),W.addEventListener("loadeddata",function(){W.play(),(g=new _(W)).magFilter=z,g.minFilter=z,T.uniforms.texture1.value=g},!1)}else g=O.load(X,b),V=O.load(Y,b),g.magFilter=V.magFilter=z,g.minFilter=V.minFilter=z;var T=new q({uniforms:{intensity1:{type:"f",value:Z},intensity2:{type:"f",value:$},dispFactor:{type:"f",value:0},angle1:{type:"f",value:H},angle2:{type:"f",value:h},texture1:{type:"t",value:g},texture2:{type:"t",value:V},disp:{type:"t",value:I}},vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",fragmentShader:"\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n  vec2 distortedPosition1 = vUv + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = vUv + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n",transparent:!0,opacity:1}),p=new A(N.offsetWidth,N.offsetHeight,1),F=new P(p,T);y.add(F),R&&(N.addEventListener("mouseenter",l),N.addEventListener("touchstart",l),N.addEventListener("mouseleave",L),N.addEventListener("touchend",L)),window.addEventListener("resize",function(f){G.setSize(N.offsetWidth,N.offsetHeight)}),this.next=l,this.previous=L}else console.warn("One or more images are missing");else console.warn("Parent missing");function l(){k.to(T.uniforms.dispFactor,B,{value:1,ease:S,onUpdate:b,onComplete:b})}function L(){k.to(T.uniforms.dispFactor,M,{value:0,ease:S,onUpdate:b,onComplete:b})}}
//# sourceMappingURL=hover-effect.es.js.map
